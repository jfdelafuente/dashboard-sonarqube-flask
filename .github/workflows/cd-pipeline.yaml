name: CD Pipeline to Docker Hub and Google Cloud Run(develop and production)
on:
  push:
    branches:
      - develop
  workflow_dispatch: {}
  release:
    types: published

env:
  PORT: 5005
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/${{vars.IMAGE}}

jobs:
  push_to_registry:
    runs-on: ubuntu-22.04
    name: Push Docker image to Docker Hub
    steps:
      - name: Check out the repo
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332

      - name: Authenticate for GCP
        id: gcp-auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Log in to Docker Hub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Enable the Billing API
        run: |
          echo "Enable ... ${{secrets.GCP_PROJECT_ID}}"
          gcloud services enable cloudbilling.googleapis.com --project=${{secrets.GCP_PROJECT_ID}}

      - name: Deploy to GCP Run - Staging environment
        id: deploy
        if: github.ref != 'refs/heads/main'
        run: |
          echo "Deploying to develop/staging environment"
          gcloud run deploy ${{vars.GCR_STAGING_PROJECT_NAME}} \
          --region ${{vars.GCR_REGION}} \
          --image ${{env.IMAGE_NAME}}:develop \
          --port ${{env.PORT}} \
          --platform "managed" \
          --allow-unauthenticated \
          --tag develop \

     
      - name: 'Show output'
        run: |2-

          echo ${{ steps.deploy.outputs.url }}
