name: CD Pipeline to Docker Hub  (develop and production)
on:
  push:
    branches:
      - develop
  workflow_dispatch: {}
  release:
    types: published

env:
  PORT: 5005
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/${{vars.IMAGE}}

jobs:
  push_to_registry:
    runs-on: ubuntu-22.04
    name: Push Docker image to Docker Hub
    steps:
      - name: Check out the repo
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332

      - name: Authenticate for GCP
        id: gcp-auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v6.10.0
        with:
          context: "{{defaultContext}}"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Enable the Billing API
        run: |
          echo "Enable ... ${{secrets.GCP_PROJECT_ID}}"
          gcloud services enable cloudbilling.googleapis.com --project=${{secrets.GCP_PROJECT_ID}}

      - name: 'Deploy to Cloud Run'
        id: deploy
        uses: 'google-github-actions/deploy-cloudrun@33553064113a37d688aa6937bacbdc481580be17' # google-github-actions/deploy-cloudrun@v2
        with:
          service: '${{vars.GCR_STAGING_PROJECT_NAME}}-cr-una'
          region: '${{vars.GCR_REGION}}'
          flags: '--port ${{env.PORT}} --allow-unauthenticated'
          image: '${{env.IMAGE_NAME}}:develop'
      
      - name: 'Show output'
        run: |2-
          echo ${{ steps.deploy.outputs.url }}
